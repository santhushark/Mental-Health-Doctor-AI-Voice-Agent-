/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../index";
import * as Cartesia from "../../../../api/index";
import * as core from "../../../../core";
import { WebSocketChunkResponse } from "../../tts/types/WebSocketChunkResponse";
import { WebSocketDoneResponse } from "../../tts/types/WebSocketDoneResponse";
import { WebSocketErrorResponse } from "../../tts/types/WebSocketErrorResponse";
export declare const StreamingResponse: core.serialization.Schema<serializers.StreamingResponse.Raw, Cartesia.StreamingResponse>;
export declare namespace StreamingResponse {
    type Raw = StreamingResponse.Chunk | StreamingResponse.Done | StreamingResponse.Error;
    interface Chunk extends WebSocketChunkResponse.Raw {
        type: "chunk";
    }
    interface Done extends WebSocketDoneResponse.Raw {
        type: "done";
    }
    interface Error extends WebSocketErrorResponse.Raw {
        type: "error";
    }
}
